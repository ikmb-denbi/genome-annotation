// Job paramaters to set for this environment

// Missing: Java, Nextflow

process {

	withName:RunMakeBlastDB {
		module = [ 'Blast+/2.2.30' ]
		cpus = { 1 * task.attempt }
		memory = { 10.GB * task.attempt }
		time = { 24.h * task.attempt }	
	}
  
	withName:RunBlastProts {
		module = [ 'Blast+/2.2.30' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 10.GB * task.attempt }
		time = { 15.h * task.attempt }
	}

	withName:RunExonerateProts {
		module = [ 'Exonerate/2.2.0', 'Bioperl/1.6.922' ] 
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}

	withName:RunGenomeThreaderProts {
		module = [ 'Genomethreader/1.7.0', 'Genometools/1.5.6' ]
		cpus = { 1 * task.attempt }
		memory = { 80.GB * task.attempt }
		time = { 72.h * task.attempt }
	}
	
	withName:GenomeThreader2HintsProts {
		module = [ 'Genometools/1.5.6' ]
	}

	withName:RunBlastEST {
		module = [ 'Blast+/2.2.30' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 10.GB * task.attempt }
		time = { 15.h * task.attempt }
	}

	withName:RunExonerateEST {
		module = [ 'Exonerate/2.2.0', 'Bioperl/1.6.922' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}

	withName:RunRepeatMasker {
		module = [ 'RepeatMasker/4.0.6' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 30.GB * task.attempt }
		time = { 24.h * task.attempt }
	}

	withName:RunTrimgalore {
		module = [ 'Trimgalore/0.4.4' ]
		cpus = { 1 * task.attempt }
		memory = { 10.GB * task.attempt }
		time = { 24.h * task.attempt }
	}

	withName:RunMakeHisatDB {
		module = [ 'Hisat2/2.1.0' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 30.h * task.attempt }
	}

	withName:RunHisat2 {
		module = [ 'Hisat2/2.1.0' , 'Samtools/1.5' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 20.GB * task.attempt }
		time = { 30.h * task.attempt }
	}
  
	withName:Hisat2Hints {
		module = [ 'Augustus/3.2.1' ]
		cpus = { 1 * task.attempt }
		memory = { 2.GB * task.attempt }
		time = { 10.h * task.attempt }
	}

	withName:RunTrinity {
		module = [ 'Samtools/1.5' , 'Trinity/2.4.0' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 20.GB * task.attempt }
		time = { 24.h * task.attempt }
	}

	withName:RunBlastTrinity {
		module = [ 'Blast+/2.2.30' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 20.GB * task.attempt }
		time = { 24.h * task.attempt }
	}

	withName:RunExonerateTrinity {
		module = [ 'Exonerate/2.2.0', 'Bioperl/1.6.922' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
	
	withName:RunAugustus {
		module = [ 'Augustus/3.2.1' ]
		cpus = { 1 * task.attempt }
		memory = { 100.GB * task.attempt }
		time = { 120.h * task.attempt }
	}
	
	withName:Augustus2Gff3 {
		module = [ 'Ruby/2.2.2' ]
		cpus = { 1 * task.attempt }
		memory = { 20.GB * task.attempt }
		time = { 10.h * task.attempt }
	}
	
	withName:Augustus2Proteins {
		module = [ 'Augustus/3.2.1' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 20.h * task.attempt }
	}
	
	withName:RunMakeBlastDBFunAnno {
		module = [ 'Blast+/2.2.30' ]
		cpus = { 1 * task.attempt }
		memory = { 10.GB * task.attempt }
		time = { 24.h * task.attempt }
	}
	
	withName:RunBlastpFunAnno {
		module = [ 'Blast+/2.2.30' ]
		cpus = { params.nthreads * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
	
	withName:RunAnnieBlast {
		module = [ 'Python/3.4.3' , 'Annie/0.0' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
	
	withName:RunInterproscan {
		module = [ 'Interproscan/5.19-58.0' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
	
	withName:RunAnnieInterpro {
		module = [ 'Python/3.4.3' , 'Annie/0.0' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
	
	withName:RunFunctionsToGFF {
		module = [ 'Ruby/2.2.2' ]
		cpus = { 1 * task.attempt }
		memory = { 50.GB * task.attempt }
		time = { 40.h * task.attempt }
	}
}
